{"version":3,"sources":["components/Header.tsx","components/SearchField.tsx","pages/Home.tsx","components/RepoList.tsx","pages/Search.tsx","pages/About.tsx","services/api.tsx","routes/index.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Box","direction","justify","align","pad","round","gap","Github","size","color","Heading","level","SearchField","search","onKeyDown","onChange","width","max","fill","TextInput","value","icon","Search","reverse","onKeyDownCapture","placeholder","Home","history","useHistory","height","e","key","searchTerm","encodeURIComponent","currentTarget","push","q","Footer","Anchor","onClick","preventDefault","href","Identifier","children","title","subTitle","rest","Text","weight","RepoList","query","fontSize","React","useContext","ResponsiveContext","useResource","url","method","reqState","data","isLoading","Layer","alignSelf","Spinner","items","length","aria-label","map","Card","hoverIndicator","margin","bottom","window","location","html_url","CardBody","full_name","description","flex","Image","fit","src","owner","avatar_url","a11yTitle","login","CardFooter","View","watchers_count","Star","stargazers_count","Network","forks_count","id","SearchPage","URLSearchParams","useLocation","has","get","useState","setSearch","useEffect","About","label","baseConfig","headers","Accept","baseURL","axiosInstance","axios","create","Routes","api","Grommet","full","theme","grommet","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ec1e28c.chunk.js","sourcesContent":["import { Box, Heading } from 'grommet'\nimport { Github } from 'grommet-icons'\n\nconst Header = () => (\n  <Box direction=\"row\" justify=\"center\" align=\"center\" pad=\"medium\" round=\"large\" gap=\"small\">\n    <Github size=\"large\" color=\"plain\" />\n    <Heading level={1}>Github Search</Heading>\n  </Box>\n)\n\nexport default Header\n","import { Box, TextInput } from 'grommet'\nimport { Search } from 'grommet-icons'\n\ninterface IProps {\n  search?: string\n  onKeyDown?: React.KeyboardEventHandler\n  onChange?: React.ChangeEventHandler\n}\n\nconst SearchField = ({ search, onKeyDown, onChange }: IProps) => (\n  <Box width={{ max: 'large' }} fill align=\"center\" justify=\"start\" pad=\"small\">\n    <TextInput\n      value={search}\n      icon={<Search />}\n      reverse\n      onKeyDownCapture={onKeyDown}\n      onChange={onChange}\n      placeholder=\"search repo...\"\n    />\n  </Box>\n)\n\nexport default SearchField\n","import { Box, Footer, Anchor } from 'grommet'\nimport { useHistory } from 'react-router-dom'\n\nimport Header from '../components/Header'\nimport SearchField from '../components/SearchField'\n\nfunction Home() {\n  const history = useHistory()\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key !== 'Enter') {\n      return\n    }\n    const searchTerm = encodeURIComponent(e.currentTarget.value)\n    history.push(`/search?q=${searchTerm}`, { q: searchTerm })\n  }\n\n  const goToAbout = (e: React.MouseEvent) => {\n    e.preventDefault()\n    history.push(`/about`)\n  }\n\n  return (\n    <Box fill justify=\"center\" align=\"center\" pad=\"medium\">\n      <Header />\n      <Box height=\"small\" width=\"xlarge\" align=\"center\">\n        <SearchField onKeyDown={onKeyDown} />\n      </Box>\n      <Footer justify=\"center\" pad=\"small\">\n        <Anchor onClick={goToAbout} href=\"/about\">\n          About\n        </Anchor>\n      </Footer>\n    </Box>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\nimport {\n  Box,\n  Card,\n  CardBody,\n  CardFooter,\n  Image,\n  Layer,\n  ResponsiveContext,\n  Spinner,\n  Text,\n} from 'grommet'\nimport { Network, Star, View } from 'grommet-icons'\nimport { useResource } from '@react-cmpt/react-request-hook'\n\ninterface IdentifierProps {\n  children: React.ReactNode\n  title: string\n  subTitle: string\n  size: string\n}\n\nconst Identifier = ({ children, title, subTitle, size, ...rest }: IdentifierProps) => (\n  <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"small\" {...rest}>\n    {children}\n    <Box gap=\"small\">\n      <Text size={size} weight=\"bold\">\n        {title}\n      </Text>\n      <Text size={size}>{subTitle}</Text>\n    </Box>\n  </Box>\n)\n\ninterface GithubOwner {\n  avatar_url: string\n  login: string\n}\n\ninterface GithubRepo {\n  id: number\n  title: string\n  description: string\n  full_name: string\n  owner: GithubOwner\n  watchers_count: number\n  stargazers_count: number\n  forks_count: number\n  html_url: string\n}\n\ninterface GithubResponse {\n  items: GithubRepo[]\n}\n\ninterface IProps {\n  query: string\n}\n\nfunction RepoList({ query }: IProps) {\n  const mobile = React.useContext(ResponsiveContext) === 'small'\n  const fontSize = mobile ? 'medium' : 'large'\n\n  const [reqState] = useResource(\n    (query: string) => ({\n      url: `/search/repositories?q=${query}+in:name&sort=stars&order=desc`,\n      method: 'GET',\n    }),\n    [query],\n  )\n\n  const data = reqState.data as GithubResponse\n\n  return (\n    <Box width={{ max: 'large' }} fill align=\"center\" justify=\"start\" pad=\"small\">\n      {reqState.isLoading && (\n        <Layer>\n          <Box\n            align=\"center\"\n            justify=\"center\"\n            gap=\"small\"\n            direction=\"row\"\n            alignSelf=\"center\"\n            pad=\"large\"\n          >\n            <Spinner />\n            <Text>Loading...</Text>\n          </Box>\n        </Layer>\n      )}\n      {!reqState.isLoading && data?.items?.length === 0 && (\n        <Box\n          align=\"center\"\n          justify=\"center\"\n          gap=\"small\"\n          direction=\"row\"\n          alignSelf=\"center\"\n          pad=\"xlarge\"\n        >\n          <Text size=\"3xl\" aria-label=\"alert\">\n            🕵️‍ No results!\n          </Text>\n        </Box>\n      )}\n\n      {data?.items?.map((value) => (\n        <Card\n          aria-label=\"GithubRepo\"\n          hoverIndicator\n          fill\n          margin={{ bottom: 'medium' }}\n          key={value.id}\n          onClick={() => (window.location.href = value.html_url)}\n        >\n          <CardBody pad=\"small\">\n            <Identifier title={value.full_name} subTitle={value.description} size={fontSize}>\n              <Box flex={false} height=\"80px\" width=\"80px\">\n                <Image fit=\"contain\" src={value.owner.avatar_url} a11yTitle={value.owner.login} />\n              </Box>\n            </Identifier>\n          </CardBody>\n          <CardFooter pad=\"small\">\n            <Box gap=\"medium\" align=\"center\" direction=\"row\" pad=\"small\">\n              <Box direction=\"row\" gap=\"small\">\n                <View color=\"plain\" />\n                <Text>{value.watchers_count}</Text>\n              </Box>\n              <Box direction=\"row\" gap=\"small\">\n                <Star color=\"plain\" />\n                <Text>{value.stargazers_count}</Text>\n              </Box>\n              <Box direction=\"row\" gap=\"small\">\n                <Network color=\"plain\" />\n                <Text>{value.forks_count}</Text>\n              </Box>\n            </Box>\n          </CardFooter>\n        </Card>\n      ))}\n    </Box>\n  )\n}\n\nexport default RepoList\n","import React, { useEffect, useState } from 'react'\n\nimport { Box } from 'grommet'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport Header from '../components/Header'\nimport RepoList from '../components/RepoList'\nimport SearchField from '../components/SearchField'\n\nfunction SearchPage() {\n  const history = useHistory()\n  const query = new URLSearchParams(useLocation().search)\n  const q = (query.has('q') ? query.get('q') : '') as string\n  const [search, setSearch] = useState(q)\n  const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key !== 'Enter') {\n      return\n    }\n    const searchTerm = encodeURIComponent(e.currentTarget.value)\n    history.push(`/search?q=${searchTerm}`, { q: searchTerm })\n  }\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const searchTerm = e.currentTarget.value\n    setSearch(searchTerm)\n  }\n\n  // The following effect takes care of syncing the search field when\n  // back button is pressed\n  useEffect(() => {\n    if (q !== search) {\n      setSearch(q)\n    }\n  }, [q]) // eslint-disable-line\n\n  return (\n    <Box justify=\"center\" align=\"center\" pad=\"medium\" round=\"large\">\n      <Header />\n      <SearchField {...{ onChange, onKeyDown, search }} />\n      <RepoList query={q} />\n    </Box>\n  )\n}\n\nexport default SearchPage\n","import { Anchor, Box } from 'grommet'\nimport { Github } from 'grommet-icons'\n\nfunction About() {\n  return (\n    <Box fill justify=\"center\" align=\"center\" pad=\"xlarge\" round=\"large\">\n      <Anchor\n        size=\"xxlarge\"\n        href=\"//github.com/yaseenshaik\"\n        label=\"Yaseen Shaik\"\n        icon={<Github size=\"large\" />}\n      />\n    </Box>\n  )\n}\n\nexport default About\n","import axios, { AxiosRequestConfig } from 'axios'\n\nlet baseConfig: AxiosRequestConfig = {\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n}\n\nif (process.env.NODE_ENV === 'production') {\n  baseConfig = {\n    ...baseConfig,\n    baseURL: 'https://api.github.com',\n  }\n}\n\nconst axiosInstance = axios.create(baseConfig)\n\nexport default axiosInstance\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Grommet } from 'grommet'\nimport { grommet } from 'grommet/themes'\nimport { RequestProvider } from '@react-cmpt/react-request-hook'\n\nimport Home from '../pages/Home'\nimport Search from '../pages/Search'\nimport About from '../pages/About'\n\nimport api from '../services/api'\n\nexport default function Routes() {\n  return (\n    <RequestProvider value={api}>\n      <Grommet full theme={grommet}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/search\">\n              <Search />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </Router>\n      </Grommet>\n    </RequestProvider>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Routes from './routes'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}